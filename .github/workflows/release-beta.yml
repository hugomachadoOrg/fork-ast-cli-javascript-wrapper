name: Javascript Wrapper Release

on:
  workflow_call:
    inputs:
      cliTag:
        description: 'CLI tag name'
        required: false
        type: string
        default: 2.0.0-nightly
      dev:
        description: 'Is dev build'
        required: false
        default: true
        type: boolean
  workflow_dispatch:
    inputs:
      cliTag:
        description: 'CLI tag name'
        required: false
        default: 2.0.0-nightly
      dev:
        description: 'Is dev build'
        required: false
        default: true
        type: boolean

permissions:
  id-token: write
  contents: write
  packages: write

jobs:
  delete_pre_release_packages:
    runs-on: ubuntu-latest
    steps:
      - name: Delete npm packages if dev
        if: inputs.dev == true
        uses: actions/delete-package-versions@v4
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          package-name: 'fork-ast-cli-javascript-wrapper'
          package-type: 'npm'
          delete-only-pre-release-versions: true
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      # Git configuration
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          
      # Setup node
      - uses: actions/setup-node@v3.6.0
        with:
          node-version: 10
          registry-url: https://npm.pkg.github.com/
          
      - name: Retrieve version
        run: |
          echo "TAG_NAME=$(npm version prerelease --preid=nightly --no-git-tag-version --allow-same-version)" >> $GITHUB_OUTPUT
        id: version
      
      - run: echo "NEW TAG= " $TAG_NAME
      
      - run: echo "NEW TAG= " ${{ steps.version.outputs.TAG_NAME }}

          
      - name: Update tag version DEV
        if: inputs.dev == true
        run: npm version prerelease --preid=nightly --no-git-tag-version --allow-same-version
        env:
          NODE_AUTH_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}
   
